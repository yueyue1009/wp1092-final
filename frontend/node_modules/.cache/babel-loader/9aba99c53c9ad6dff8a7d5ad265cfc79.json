{"ast":null,"code":"var _jsxFileName = \"/Users/zhengshipeng/Desktop/NS/wp1092-final/app/frontend/src/components/BetContent.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { shortDate } from './utils';\nimport { getGameByDate } from '../api';\nimport { useEffect, useState, React } from 'react';\nimport { Button, Grid, Typography, Modal, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport { newBet } from '../api';\nimport LOGOS from '../logos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    position: 'relative',\n    width: 380,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%'\n  }\n}));\n\nfunction BetContent({\n  game,\n  user,\n  setUser,\n  isLogin\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [betAmount, setBetAmount] = useState(\"\");\n  const [visitorModalOpen, setVisitorModalOpen] = useState(false);\n  const [homeModalOpen, setHomeModalOpen] = useState(false);\n  const [hintText, setHintText] = useState(\"\");\n\n  const handleChange = func => event => {\n    func(event.target.value);\n  };\n\n  const handleVisitorClose = () => {\n    setVisitorModalOpen(false);\n  };\n\n  const handleVisitorOpen = () => {\n    setVisitorModalOpen(true);\n  };\n\n  const handleHomeClose = () => {\n    setHomeModalOpen(false);\n  };\n\n  const handleHomeOpen = () => {\n    setHomeModalOpen(true);\n  };\n\n  const handleBet = async type => {\n    if (betAmount === \"\") {\n      setHintText(\"Enter an amount!\");\n      return;\n    }\n\n    if (betAmount > user.money) {\n      setHintText(`Out of range. You only have $${user.money} left.`);\n      return;\n    }\n\n    const {\n      data\n    } = await newBet(user.name, game.gameID, type, betAmount);\n\n    if (data.type === \"success\") {\n      setHintText(\"Successfully placed a bet!\");\n      setBetAmount(\"\");\n      setUser(data.user);\n    } else if (data.type === \"error\") {\n      setHintText(data.message);\n    }\n  };\n\n  console.log(game.gameStatus);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    container: true,\n    xs: 6,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          fontSize: '22px'\n        },\n        children: game.visitorTeam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LOGOS[game.visitorTeamAbbr],\n        style: {\n          width: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), game.gameStatus === \"Todo\" ? isLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleVisitorOpen,\n          children: \"Place a bet!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: visitorModalOpen,\n          onClose: handleVisitorClose,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.modal,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                fontSize: \"120%\",\n                fontWeight: \"bold\"\n              },\n              children: \"Type in the amount you want to bet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"or click anywhere to cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              variant: \"outlined\",\n              value: betAmount,\n              onChange: handleChange(setBetAmount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: hintText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => handleBet(\"away\"),\n              children: \"Bet!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        children: \" Login to bet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          fontSize: '22px'\n        },\n        children: game.homeTeam\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LOGOS[game.homeTeamAbbr],\n        style: {\n          width: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), game.gameStatus === \"Todo\" ? isLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleHomeOpen,\n          children: \"Place a bet!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: homeModalOpen,\n          onClose: handleHomeClose,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.modal,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              style: {\n                fontSize: \"120%\",\n                fontWeight: \"bold\"\n              },\n              children: \"Type in the amount you want to bet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"or click anywhere to cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              size: \"small\",\n              variant: \"outlined\",\n              value: betAmount,\n              onChange: handleChange(setBetAmount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: hintText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => handleBet(\"home\"),\n              children: \"Bet!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        children: \" Login to bet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BetContent, \"rHMOfbG9ZwAes11pwziQps/oizU=\", false, function () {\n  return [useStyles];\n});\n\n_c = BetContent;\nexport default BetContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BetContent\");","map":{"version":3,"sources":["/Users/zhengshipeng/Desktop/NS/wp1092-final/app/frontend/src/components/BetContent.js"],"names":["PropTypes","shortDate","getGameByDate","useEffect","useState","React","Button","Grid","Typography","Modal","TextField","makeStyles","newBet","LOGOS","useStyles","theme","modal","position","width","backgroundColor","palette","background","paper","border","boxShadow","shadows","padding","spacing","top","left","BetContent","game","user","setUser","isLogin","classes","betAmount","setBetAmount","visitorModalOpen","setVisitorModalOpen","homeModalOpen","setHomeModalOpen","hintText","setHintText","handleChange","func","event","target","value","handleVisitorClose","handleVisitorOpen","handleHomeClose","handleHomeOpen","handleBet","type","money","data","name","gameID","message","console","log","gameStatus","fontSize","visitorTeam","visitorTeamAbbr","fontWeight","homeTeam","homeTeamAbbr"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { shortDate } from './utils';\nimport { getGameByDate } from '../api'\nimport { useEffect, useState, React} from 'react';\nimport { Button, Grid, Typography, Modal, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport { newBet } from '../api';\nimport LOGOS from '../logos'\n\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: 'relative',\n    width: 380,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%'\n  },\n}));\n\n\n\nfunction BetContent({ game, user, setUser, isLogin}){\n  const classes = useStyles();\n  const [betAmount, setBetAmount] = useState(\"\");\n  const [visitorModalOpen, setVisitorModalOpen] = useState(false);\n  const [homeModalOpen, setHomeModalOpen] = useState(false);\n  const [hintText, setHintText] = useState(\"\");\n  const handleChange = (func) => (event) => {\n    func(event.target.value);\n  };\n  const handleVisitorClose = () => {\n    setVisitorModalOpen(false);\n  };\n  const handleVisitorOpen = () => {\n    setVisitorModalOpen(true);\n  };\n  const handleHomeClose = () => {\n    setHomeModalOpen(false);\n  };\n  const handleHomeOpen = () => {\n    setHomeModalOpen(true);\n  };\n  const handleBet = async (type) =>{\n    if (betAmount === \"\") {\n      setHintText(\"Enter an amount!\")\n      return;\n    }\n    if (betAmount > user.money) {\n      setHintText(`Out of range. You only have $${user.money} left.`)\n      return;\n    }\n    const { data } = await newBet(user.name, game.gameID, type, betAmount);\n    if (data.type === \"success\") {\n      setHintText(\"Successfully placed a bet!\");\n      setBetAmount(\"\");\n      setUser(data.user);\n    }\n    else if (data.type === \"error\") {\n      setHintText(data.message);\n    }\n    \n  }\n  console.log(game.gameStatus);\n  return (\n    <Grid item container xs={6}>\n      <Grid item xs={6} align=\"center\">\n        <br></br>\n        <Typography style={{fontSize: '22px'}}>{game.visitorTeam}</Typography>\n        <img src={LOGOS[game.visitorTeamAbbr]} style={{ width: \"100px\" }} />\n        {(game.gameStatus === \"Todo\")? \n          ((isLogin) ? (\n            <>\n              <Button onClick={handleVisitorOpen}>Place a bet!</Button>\n              <Modal open={visitorModalOpen} onClose={handleVisitorClose}>\n                <div className={classes.modal}>\n                  <Typography variant=\"h6\" style={{ fontSize: \"120%\", fontWeight: \"bold\" }}>Type in the amount you want to bet</Typography>\n                  <Typography variant=\"body1\">or click anywhere to cancel</Typography>\n                  <TextField size=\"small\" variant=\"outlined\" value={betAmount} onChange={handleChange(setBetAmount)} />\n\n                  <Typography variant=\"body2\">{hintText}</Typography>\n                  <Button variant=\"outlined\" onClick={() => handleBet(\"away\")}>Bet!</Button>\n                </div>\n\n              </Modal>\n\n            </>\n          ) : (\n              <Typography color=\"primary\"> Login to bet!</Typography>\n          )) : (\n            <>\n            </>\n        )}\n        \n      </Grid>\n      <Grid item xs={6} align=\"center\">\n        <br></br>\n        <Typography style={{fontSize: '22px'}}>{game.homeTeam}</Typography>\n        <img src={LOGOS[game.homeTeamAbbr]} style={{width: \"100px\"}}/>\n        {(game.gameStatus === \"Todo\") ?\n          ((isLogin) ? (\n            <>\n              <Button onClick={handleHomeOpen}>Place a bet!</Button>\n              <Modal open={homeModalOpen} onClose={handleHomeClose}>\n                <div className={classes.modal}>\n                  <Typography variant=\"h6\" style={{ fontSize: \"120%\", fontWeight: \"bold\" }}>Type in the amount you want to bet</Typography>\n                  <Typography variant=\"body1\">or click anywhere to cancel</Typography>\n                  <TextField size=\"small\" variant=\"outlined\" value={betAmount} onChange={handleChange(setBetAmount)} />\n\n                  <Typography variant=\"body2\">{hintText}</Typography>\n                  <Button variant=\"outlined\" onClick={() => handleBet(\"home\")}>Bet!</Button>\n                </div>\n\n              </Modal>\n\n            </>\n          ) : (\n            <Typography color=\"primary\"> Login to bet!</Typography>\n          )) : (\n            <>\n            </>\n          )}\n      </Grid>\n    </Grid>\n  )\n}\nexport default BetContent;\n"]},"metadata":{},"sourceType":"module"}