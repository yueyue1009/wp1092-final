{"ast":null,"code":"import axios from 'axios';\nimport { sha256 } from 'crypto-js';\nconst instance = axios.create({// baseURL: `http://localhost:4000/api`,\n});\n\nconst login = async user => {\n  //user = {name, password(明碼)}\n  let res;\n\n  try {\n    // user.password = sha256(user.password) //(明碼變暗碼)\n    res = await instance.post('/user/login', user); // user.password = sha256(user.password)\n\n    console.log(res);\n    return res;\n  } catch (error) {\n    if (!error.response) {\n      return 'Server no response';\n    } else {\n      console.log(error);\n    }\n  }\n};\n\nconst signUp = async user => {\n  let res;\n\n  try {\n    // user.password = sha256(user.password) //(明碼變暗碼)\n    res = await instance.post('/user/signup', user);\n    console.log(res);\n  } catch (error) {\n    if (!error.response) {\n      return 'Server no response';\n    } else {\n      console.log(error);\n    }\n  }\n\n  console.log(res);\n  return res;\n};\n\nconst getGameByDate = async date => {\n  // console.log(date)\n  let res;\n\n  try {\n    res = await instance.get('/schedule/Games', {\n      params: {\n        gameDateTime: date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\n      }\n    }); // console.log(date);\n    // console.log(res);\n  } catch (error) {\n    if (!error.response) {\n      return 'Server no response';\n    } else {\n      console.log(error);\n    }\n  }\n\n  return res;\n}; // type = 'away' | 'home'\n\n\nconst newBet = async (username, gameID, type, money) => {\n  console.log(username);\n  let res;\n\n  try {\n    res = await instance.post('/bet/newBet', {\n      username: username,\n      gameID: gameID,\n      type: type,\n      money: money\n    });\n  } catch (error) {\n    if (!error.response) {\n      return 'Server no response';\n    } else {\n      console.log(error);\n    }\n  }\n\n  console.log(res);\n  return res;\n};\n\nconst getBetHistory = async username => {\n  let res;\n\n  try {\n    res = await instance.get('/user/bets', {\n      params: {\n        name: username\n      }\n    });\n  } catch (error) {\n    if (!error.response) {\n      return 'Server no response';\n    } else {\n      console.log(error);\n    }\n  }\n\n  return res;\n};\n\nconst drawBet = async (id, gameID) => {\n  let res;\n\n  try {\n    res = await instance.post('/bet/drawBet', {\n      id: id,\n      gameID: gameID\n    });\n  } catch (error) {\n    if (!error.response) {\n      return 'Server no response';\n    } else {\n      console.log(error);\n    }\n  }\n\n  return res;\n};\n\nconst getGameById = async (home, visitor) => {\n  let res;\n\n  try {\n    res = await instance.get('/schedule/gamesById', {\n      params: {\n        homeTeamAbbr: home,\n        visitorTeamAbbr: visitor\n      }\n    });\n  } catch (error) {\n    if (!error.response) {\n      return 'Server no response';\n    } else {\n      console.log(error);\n    }\n  }\n\n  return res;\n};\n\nexport { login, signUp, getGameByDate, newBet, getBetHistory, drawBet, getGameById };","map":{"version":3,"sources":["/Users/zhengshipeng/Desktop/NS/wp1092-final/app/frontend/src/api.js"],"names":["axios","sha256","instance","create","login","user","res","post","console","log","error","response","signUp","getGameByDate","date","get","params","gameDateTime","getFullYear","getMonth","getDate","newBet","username","gameID","type","money","getBetHistory","name","drawBet","id","getGameById","home","visitor","homeTeamAbbr","visitorTeamAbbr"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {sha256} from 'crypto-js'\n\nconst instance = axios.create({\n  // baseURL: `http://localhost:4000/api`,\n});\n\nconst login = async (user) => { //user = {name, password(明碼)}\n    let res\n    try {\n      // user.password = sha256(user.password) //(明碼變暗碼)\n      res = await instance.post('/user/login', user)\n      // user.password = sha256(user.password)\n      console.log(res)\n      return res\n    }\n    catch(error) {\n      if (!error.response) {\n        return 'Server no response'\n      } else {\n        console.log(error);\n      }\n    }\n}\n\nconst signUp = async (user) => { \n  let res\n  try {\n    // user.password = sha256(user.password) //(明碼變暗碼)\n    res = await instance.post('/user/signup', user)\n    console.log(res)\n  }\n  catch(error) {\n    if (!error.response) {\n      return 'Server no response'\n    } else {\n      console.log(error);\n    }\n  }\n  console.log(res)\n  return res;\n} \n\nconst getGameByDate = async (date) => { \n  // console.log(date)\n  let res;\n  try {\n    res = await instance.get('/schedule/Games', { \n      params:{\n        gameDateTime: date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getDate()\n      }\n    });\n    // console.log(date);\n    // console.log(res);\n  }\n  catch(error) {\n    if (!error.response) {\n      return 'Server no response'\n    } else {\n      console.log(error);\n    }\n  }\n  return res;\n} \n\n// type = 'away' | 'home'\nconst newBet = async (username, gameID, type, money) => {\n  console.log(username)\n  let res;\n  try {\n    res = await instance.post('/bet/newBet', {\n      username: username,\n      gameID: gameID,\n      type: type,\n      money: money,\n    });\n  }\n  catch(error){\n    if (!error.response) {\n      return 'Server no response'\n    } else {\n      console.log(error);\n    }\n  }\n  console.log(res);\n  return res;\n}\n\nconst getBetHistory = async(username) => {\n  let res;\n  try {\n    res = await instance.get('/user/bets', { \n      params:{\n        name: username\n      }\n    });\n  }\n  catch(error) {\n    if (!error.response) {\n      return 'Server no response'\n    } else {\n      console.log(error);\n    }\n  }\n  return res;\n};\n\nconst  drawBet = async(id, gameID) => {\n  let res;\n  try {\n    res = await instance.post('/bet/drawBet', { \n      id: id,\n      gameID: gameID,\n    });\n  }\n  catch(error) {\n    if (!error.response) {\n      return 'Server no response'\n    } else {\n      console.log(error);\n    }\n  }\n  return res;\n}\n\nconst getGameById = async(home, visitor) => {\n  let res;\n  try {\n    res = await instance.get('/schedule/gamesById', { \n      params:{\n        homeTeamAbbr: home,\n        visitorTeamAbbr: visitor,\n      }\n    });\n  }\n  catch(error) {\n    if (!error.response) {\n      return 'Server no response'\n    } else {\n      console.log(error);\n    }\n  }\n  return res;\n};\n\nexport { login, signUp, getGameByDate, newBet, getBetHistory, drawBet, getGameById };\n"]},"metadata":{},"sourceType":"module"}