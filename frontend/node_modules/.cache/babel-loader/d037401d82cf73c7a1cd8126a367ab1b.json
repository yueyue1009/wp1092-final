{"ast":null,"code":"var _jsxFileName = \"/Users/zhengshipeng/Desktop/NS/wp1092-final/app/frontend/src/components/CompetitionRecord.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Grid, List, ListItem, Typography, Divider, makeStyles } from '@material-ui/core';\nimport { getGameById } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  text: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction formattedDate(dateStr) {\n  const date = new Date(Date.parse(dateStr));\n  return `${(date.getUTCMonth() + 1).pad(2)}/${date.getUTCDate().pad(2)}`;\n}\n\nfunction CompetitionRecord({\n  home,\n  visitor\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [games, setGames] = useState([]);\n  useEffect(async () => {\n    let res = await getGameById(home, visitor);\n\n    if (res.data.type === \"success\") {\n      console.log(res.data.games);\n      setGames(res.data.games);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"inset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), games.map((game, i) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              style: game.visitorTeamScore > game.homeTeamScore ? {\n                fontWeight: \"bolder\"\n              } : {},\n              children: game.visitorTeamScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 1,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: formattedDate(game.gameDateTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              style: game.visitorTeamScore < game.homeTeamScore ? {\n                fontWeight: \"bolder\"\n              } : {},\n              children: game.homeTeamScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CompetitionRecord, \"AlySPHQPGOEQmeKUqife514qHwE=\", false, function () {\n  return [useStyles];\n});\n\n_c = CompetitionRecord;\nexport default CompetitionRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompetitionRecord\");","map":{"version":3,"sources":["/Users/zhengshipeng/Desktop/NS/wp1092-final/app/frontend/src/components/CompetitionRecord.js"],"names":["useEffect","useState","Grid","List","ListItem","Typography","Divider","makeStyles","getGameById","useStyles","theme","text","textAlign","formattedDate","dateStr","date","Date","parse","getUTCMonth","pad","getUTCDate","CompetitionRecord","home","visitor","classes","games","setGames","res","data","type","console","log","map","game","i","visitorTeamScore","homeTeamScore","fontWeight","gameDateTime"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport  {\n  Grid,\n  List,\n  ListItem,\n  Typography,\n  Divider,\n  makeStyles,\n} from '@material-ui/core';\nimport { getGameById } from '../api';\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    textAlign: \"center\",\n  }\n}));\n\nfunction formattedDate(dateStr){\n  const date = new Date(Date.parse(dateStr));\n  return `${(date.getUTCMonth()+1).pad(2)}/${date.getUTCDate().pad(2)}`;\n}\n\nfunction CompetitionRecord({ home, visitor }){\n  const classes = useStyles();\n\n  const [games, setGames] = useState([]);\n\n  useEffect(async () => {\n    let res = await getGameById(home, visitor);\n    if (res.data.type === \"success\") {\n      console.log(res.data.games);\n      setGames(res.data.games);\n    }\n  }, [])\n\n  return (\n    <List>\n      <Divider variant='inset'/>\n      {games.map((game, i) => {\n        return (\n          <>\n            <ListItem key={i}>\n              <Grid item xs={6}>\n                <Typography className={classes.text} style={(game.visitorTeamScore > game.homeTeamScore) ? {fontWeight:\"bolder\"}:{}}>{game.visitorTeamScore}</Typography>\n              </Grid>\n              <Grid item xs={1}>\n                <Typography className={classes.text}>{formattedDate(game.gameDateTime)}</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography className={classes.text} style={(game.visitorTeamScore < game.homeTeamScore) ? {fontWeight:\"bolder\"}:{}}>{game.homeTeamScore}</Typography>\n              </Grid>\n            </ListItem>\n            <Divider variant='inset'/>\n          </>\n        )\n      })}\n    </List>\n  );\n}\n\nexport default CompetitionRecord;\n"]},"metadata":{},"sourceType":"module"}