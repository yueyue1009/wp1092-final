{"ast":null,"code":"// import { useState } from 'react';\n// import Button from '@material-ui/core/Button';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import styled from 'styled-components';\n// import TextField from '@material-ui/core/TextField';\n// import Typography from '@material-ui/core/Typography';\n// import { useStyles } from '../hooks';\n// // import axios from '../api';\n// import { useScoreCard } from '../hooks/useScoreCard';\n// const Wrapper = styled.section`\n//   display: flex;\n//   flex-direction: column;\n// `;\n// const Row = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 100%;\n//   padding: 1em;\n// `;\n// const StyledFormControl = styled(FormControl)`\n//   min-width: 120px;\n// `;\n// const ContentPaper = styled(Paper)`\n//   height: 300px;\n//   padding: 2em;\n//   overflow: auto;\n// `;\n// const Body = () => {\n//   const classes = useStyles();\n//   const { messages, addCardMessage, addRegularMessage, addErrorMessage } =\n//     useScoreCard();\n//   const [name, setName] = useState('');\n//   const [subject, setSubject] = useState('');\n//   const [score, setScore] = useState(0);\n//   const [queryType, setQueryType] = useState('name');\n//   const [queryString, setQueryString] = useState('');\n//   const handleChange = (func) => (event) => {\n//     func(event.target.value);\n//   };\n//   const handleAdd = async () => {\n//     const {\n//       data: { message, card },\n//     } = await axios.post('/api/create-card', {\n//       name,\n//       subject,\n//       score,\n//     });\n//     if (!card) addErrorMessage(message);\n//     else addCardMessage(message);\n//   };\n//   const handleQuery = async () => {\n//     const {\n//       data: { messages, message },\n//     } = await {} // TODO: axios.xxx call the right api\n//     if (!messages) addErrorMessage(message);\n//     else addRegularMessage(...messages);\n//   };\n//   return (\n//     <Wrapper>\n//       <Row>\n//         {/* Could use a form & a library for handling form data here such as Formik, but I don't really see the point... */}\n//         <TextField\n//           className={classes.input}\n//           placeholder=\"Name\"\n//           value={name}\n//           onChange={handleChange(setName)}\n//         />\n//         <TextField\n//           className={classes.input}\n//           placeholder=\"Subject\"\n//           style={{ width: 240 }}\n//           value={subject}\n//           onChange={handleChange(setSubject)}\n//         />\n//         <TextField\n//           className={classes.input}\n//           placeholder=\"Score\"\n//           value={score}\n//           onChange={handleChange(setScore)}\n//           type=\"number\"\n//         />\n//         <Button\n//           className={classes.button}\n//           variant=\"contained\"\n//           color=\"primary\"\n//           disabled={!name || !subject}\n//           onClick={handleAdd}\n//         >\n//           Add\n//         </Button>\n//       </Row>\n//       <Row>\n//         <StyledFormControl>\n//           <FormControl component=\"fieldset\">\n//             <RadioGroup\n//               row\n//               value={queryType}\n//               onChange={handleChange(setQueryType)}\n//             >\n//               <FormControlLabel\n//                 value=\"name\"\n//                 control={<Radio color=\"primary\" />}\n//                 label=\"Name\"\n//               />\n//               <FormControlLabel\n//                 value=\"subject\"\n//                 control={<Radio color=\"primary\" />}\n//                 label=\"Subject\"\n//               />\n//             </RadioGroup>\n//           </FormControl>\n//         </StyledFormControl>\n//         <TextField\n//           placeholder=\"Query string...\"\n//           value={queryString}\n//           onChange={handleChange(setQueryString)}\n//           style={{ flex: 1 }}\n//         />\n//         <Button\n//           className={classes.button}\n//           variant=\"contained\"\n//           color=\"primary\"\n//           disabled={!queryString}\n//           onClick={handleQuery}\n//         >\n//           Query\n//         </Button>\n//       </Row>\n//       <ContentPaper variant=\"outlined\">\n//         {messages.map((m, i) => (\n//           <Typography variant=\"body2\" key={m + i} style={{ color: m.color }}>\n//             {m.message}\n//           </Typography>\n//         ))}\n//       </ContentPaper>\n//     </Wrapper>\n//   );\n// };\n// export default Body;","map":{"version":3,"sources":["/Users/zhengshipeng/Desktop/NS/wp1092-final/app/frontend/src/containers/Body.js"],"names":[],"mappingssourcesContent":["// import { useState } from 'react';\n// import Button from '@material-ui/core/Button';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Paper from '@material-ui/core/Paper';\n// import Radio from '@material-ui/core/Radio';\n// import RadioGroup from '@material-ui/core/RadioGroup';\n// import styled from 'styled-components';\n// import TextField from '@material-ui/core/TextField';\n// import Typography from '@material-ui/core/Typography';\n\n// import { useStyles } from '../hooks';\n// // import axios from '../api';\n// import { useScoreCard } from '../hooks/useScoreCard';\n\n// const Wrapper = styled.section`\n//   display: flex;\n//   flex-direction: column;\n// `;\n\n// const Row = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 100%;\n//   padding: 1em;\n// `;\n\n// const StyledFormControl = styled(FormControl)`\n//   min-width: 120px;\n// `;\n\n// const ContentPaper = styled(Paper)`\n//   height: 300px;\n//   padding: 2em;\n//   overflow: auto;\n// `;\n\n// const Body = () => {\n//   const classes = useStyles();\n\n//   const { messages, addCardMessage, addRegularMessage, addErrorMessage } =\n//     useScoreCard();\n\n//   const [name, setName] = useState('');\n//   const [subject, setSubject] = useState('');\n//   const [score, setScore] = useState(0);\n\n//   const [queryType, setQueryType] = useState('name');\n//   const [queryString, setQueryString] = useState('');\n\n//   const handleChange = (func) => (event) => {\n//     func(event.target.value);\n//   };\n\n//   const handleAdd = async () => {\n//     const {\n//       data: { message, card },\n//     } = await axios.post('/api/create-card', {\n//       name,\n//       subject,\n//       score,\n//     });\n\n//     if (!card) addErrorMessage(message);\n//     else addCardMessage(message);\n//   };\n\n//   const handleQuery = async () => {\n//     const {\n//       data: { messages, message },\n//     } = await {} // TODO: axios.xxx call the right api\n\n//     if (!messages) addErrorMessage(message);\n//     else addRegularMessage(...messages);\n//   };\n\n//   return (\n//     <Wrapper>\n//       <Row>\n//         {/* Could use a form & a library for handling form data here such as Formik, but I don't really see the point... */}\n//         <TextField\n//           className={classes.input}\n//           placeholder=\"Name\"\n//           value={name}\n//           onChange={handleChange(setName)}\n//         />\n//         <TextField\n//           className={classes.input}\n//           placeholder=\"Subject\"\n//           style={{ width: 240 }}\n//           value={subject}\n//           onChange={handleChange(setSubject)}\n//         />\n//         <TextField\n//           className={classes.input}\n//           placeholder=\"Score\"\n//           value={score}\n//           onChange={handleChange(setScore)}\n//           type=\"number\"\n//         />\n//         <Button\n//           className={classes.button}\n//           variant=\"contained\"\n//           color=\"primary\"\n//           disabled={!name || !subject}\n//           onClick={handleAdd}\n//         >\n//           Add\n//         </Button>\n//       </Row>\n//       <Row>\n//         <StyledFormControl>\n//           <FormControl component=\"fieldset\">\n//             <RadioGroup\n//               row\n//               value={queryType}\n//               onChange={handleChange(setQueryType)}\n//             >\n//               <FormControlLabel\n//                 value=\"name\"\n//                 control={<Radio color=\"primary\" />}\n//                 label=\"Name\"\n//               />\n//               <FormControlLabel\n//                 value=\"subject\"\n//                 control={<Radio color=\"primary\" />}\n//                 label=\"Subject\"\n//               />\n//             </RadioGroup>\n//           </FormControl>\n//         </StyledFormControl>\n//         <TextField\n//           placeholder=\"Query string...\"\n//           value={queryString}\n//           onChange={handleChange(setQueryString)}\n//           style={{ flex: 1 }}\n//         />\n//         <Button\n//           className={classes.button}\n//           variant=\"contained\"\n//           color=\"primary\"\n//           disabled={!queryString}\n//           onClick={handleQuery}\n//         >\n//           Query\n//         </Button>\n//       </Row>\n//       <ContentPaper variant=\"outlined\">\n//         {messages.map((m, i) => (\n//           <Typography variant=\"body2\" key={m + i} style={{ color: m.color }}>\n//             {m.message}\n//           </Typography>\n//         ))}\n//       </ContentPaper>\n//     </Wrapper>\n//   );\n// };\n\n// export default Body;\n"]},"metadata":{},"sourceType":"module"}